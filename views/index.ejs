<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>All Items</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .search-result-item {
            border: 1px solid #ddd;
            padding: 8px;
            margin-bottom: 5px;
            border-radius: 4px;
            background-color: #f8f8f8;
        }
    </style>
</head>

<body>
    <div class="container mt-4">
        <h1>Pz-Items</h1>
        <p>Recherchez un item parmi tous les mods de Project Zomboid.</p>

        <a href="/" class="btn btn-primary mt-3 mb-2">Tous les mods</a>

        <!-- Barre de recherche générale pour les mods -->
        <input type="text" id="modSearch" class="form-control mb-2" placeholder="Rechercher un mod...">

        <!-- Barre de recherche globale pour tous les items -->
        <input type="text" id="globalItemSearch" class="form-control mb-2"
            placeholder="Rechercher parmi tous les items...">

        <!-- Div pour afficher les résultats de la recherche globale -->
        <div id="global-search-results" class="mb-3"></div>
        
    <!-- Notification -->
    <div id="notification" class="alert alert-success collapse" role="alert">
        Item copié dans le presse-papier !
    </div>

    <div id="mods-container">
        <% for(const modName in items) { %>
            <div class="card mb-3">
                <div class="card-header">
                    <h5 class="mb-0" data-bs-toggle="collapse" data-bs-target="#collapse-<%= modName %>">
                        <%= modName %>
                    </h5>
                </div>
                <div id="collapse-<%= modName %>" class="collapse card-body">
                    <!-- Barre de recherche pour les items de chaque mod -->
                    <input type="text" class="form-control itemSearch" placeholder="Rechercher un item...">
    
                    <ul class="list-group mt-2">
                        <% items[modName].forEach(item=> { %>
                            <li class="list-group-item item" onclick="copyToClipboard('<%= item %>')">
                                <%= item %>
                            </li>
                            <% }); %>
                    </ul>
                </div>
            </div>
            <% } %>
    </div>
    </div>

    <!-- Bootstrap JS Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('globalItemSearch').addEventListener('input', function (e) {
            const term = e.target.value.toLowerCase();
            const resultsDiv = document.getElementById('global-search-results');
            resultsDiv.innerHTML = ''; // Vider les résultats précédents

            if (term) {
                document.querySelectorAll('.item').forEach(item => {
                    if (item.textContent.toLowerCase().includes(term)) {
                        const resultItem = document.createElement('div');
                        resultItem.classList.add('search-result-item');
                        resultItem.textContent = item.textContent;
                        resultsDiv.appendChild(resultItem);
                    }
                });
            }
        });

        // Recherche par nom de mod
        document.getElementById('modSearch').addEventListener('input', function (e) {
            const term = e.target.value.toLowerCase();
            document.querySelectorAll('.card').forEach(card => {
                const modName = card.querySelector('.card-header h5').textContent.toLowerCase();
                card.style.display = modName.includes(term) ? '' : 'none';
            });
        });

        // Recherche par nom d'item dans chaque mod
        document.querySelectorAll('.itemSearch').forEach(searchBox => {
            searchBox.addEventListener('input', function (e) {
                const term = e.target.value.toLowerCase();
                const listGroup = e.target.nextElementSibling;
                listGroup.querySelectorAll('.item').forEach(item => {
                    item.style.display = item.textContent.toLowerCase().includes(term) ? '' : 'none';
                });
            });
        });

        function copyToClipboard(text) {
            navigator.clipboard.writeText(text.trim).then(() => {
                showNotification();
            }).catch(err => {
                console.error('Erreur lors de la copie:', err);
            });
        }

        function showNotification() {
            const notification = document.getElementById('notification');
            notification.classList.add('show');
            setTimeout(() => {
                notification.classList.remove('show');
            }, 3000);
        }

        document.getElementById('globalItemSearch').addEventListener('input', function (e) {
            const term = e.target.value.toLowerCase();
            const resultsDiv = document.getElementById('global-search-results');
            resultsDiv.innerHTML = '';

            if (term) {
                document.querySelectorAll('.item').forEach(item => {
                    if (item.textContent.toLowerCase().includes(term)) {
                        const resultItem = document.createElement('div');
                        resultItem.classList.add('search-result-item');
                        resultItem.textContent = item.textContent;
                        resultItem.onclick = function () { copyToClipboard(item.textContent) };
                        resultsDiv.appendChild(resultItem);
                    }
                });
            }
        });
    </script>
</body>

</html>